{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Test All Functions",
			"type": "shell",
			"command": "source .env 2>/dev/null || true; for func in ./src/*; do if [[ -f \"$func\" && -x \"$func\" ]]; then echo \"Testing $func...\"; zsh -c \"source '$func' && echo 'Successfully loaded $func'\"; fi; done",
			"group": "test",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Sync to ~/.zfunc",
			"type": "shell",
			"command": "source .env 2>/dev/null || true; cp -v ./src/* \"${ZFUNC_SYNC_DIR:-~/.zfunc}/\" && echo \"Functions synced to ${ZFUNC_SYNC_DIR:-~/.zfunc}\"",
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Make Functions Executable",
			"type": "shell",
			"command": "source .env 2>/dev/null || true; chmod +x ./src/*",
			"group": "build",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Validate Shell Scripts",
			"type": "shell",
			"command": "source .env 2>/dev/null || true; for func in ./src/*; do if [[ -f \"$func\" && -x \"$func\" ]]; then echo \"Checking $func...\"; shellcheck \"$func\" || echo \"Warning: shellcheck failed for $func\"; fi; done",
			"group": "test",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Run Unit Tests (Bats)",
			"type": "shell",
			"command": "bats tests/unit/",
			"group": "test",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Run Integration Tests (Bats)",
			"type": "shell",
			"command": "bats tests/integration/",
			"group": "test",
			"isBackground": false,
			"problemMatcher": []
		},
		{
			"label": "Run All Tests (Bats)",
			"type": "shell",
			"command": "bats tests/unit/ tests/integration/",
			"group": "test",
			"isBackground": false,
			"problemMatcher": []
		}
	]
}